name: Connectify - Front

on:
  push:
    branches: [ "dev_test" ]

  workflow_dispatch:

permissions:
  id-token: write # Require write permission to Fetch an OIDC token.
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: GIT | Checkout
        uses: actions/checkout@v2

      - name: GIT | Get current branch
        run: echo "CURRENT_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: AZURE | CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    #   - name: DOCKER | Login
    #     uses: azure/docker-login@v2
    #     with:
    #       login-server: atcdevacr.azurecr.io
    #       username: ${{ secrets.AZURE_CLIENT_ID }}
    #       password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Get ACR access token
        run: echo "::set-output name=acr_token::$(az acr login --name atcdevacr.azurecr.io --expose-token --output tsv --query accessToken)"
        id: acr_token
  
      - name: Log in to ACR using docker-login@v2
        uses: azure/docker-login@v2
        with:
          login-server: atcdevacr.azurecr.io
          username: "00000000-0000-0000-0000-000000000000"  # Static username for ACR token auth
          password: ${{ steps.acr_token.outputs.acr_token }}

      - name: Build and tag Docker image
        run: |
            docker build -t myregistry.azurecr.io/my-image:latest .
    
      - name: Push image to ACR
        run: |
            docker push myregistry.azurecr.io/my-image:latest
